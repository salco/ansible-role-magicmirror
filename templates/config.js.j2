/* Magic Mirror Config Sample
 *
 * By Michael Teeuw http://michaelteeuw.nl
 * MIT Licensed.
 *
 * For more information how you can configurate this file
 * See https://github.com/MichMich/MagicMirror#configuration
 *
 */

var config = {
    address: "localhost", // Address to listen on, can be:
                          // - "localhost", "127.0.0.1", "::1" to listen on loopback interface
                          // - another specific IPv4/6 to listen on a specific interface
                          // - "", "0.0.0.0", "::" to listen on any interface
                          // Default, when address config is left out, is "localhost"
    port: 8080,
    ipWhitelist: ["127.0.0.1", "::ffff:127.0.0.1", "::1"], // Set [] to allow all IP addresses
                                                           // or add a specific IPv4 of 192.168.1.5 :
                                                           // ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.1.5"],
                                                           // or IPv4 range of 192.168.3.0 --> 192.168.3.15 use CIDR format :
                                                           // ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.3.0/28"],

    language: "en",
    timeFormat: {{ magicmirror_timeformat }},
    units: "{{ magicmirror_units }}",

    modules: [
        {
            module: "alert"
        },
        {
            module: "updatenotification",
            position: "top_bar"
        },
{% if magicmirror_watchdog_enabled %}
        {
            module: 'MMM-WatchDog',
            config: {
                interval: 2,
                timeout: 10,
                pm2_app: "{{ magicmirror_watchdog_pm2_app }}"
            }
        },
{% endif %}
{% if magicmirror_pirsensor_enabled %}
        {
            module: 'MMM-PIR-Sensor',
            config: {
                sensorPIN: {{ magicmirror_pirsensor_pin }},
                powerSaving: "{{ magicmirror_pirsensor_powersaving }}",
                powerSavingDelay: {{ magicmirror_pirsensor_powersaving_delay | default(0, true) }},
            }
        },
{% endif %}
        {
            module: "clock",
            position: "top_left",
            timezone: "{{ magicmirror_timezone }}"
        },
        {
            module: "calendar",
            header: "{{ magicmirror_calendar_header }}",
            position: "top_left",
            config: {
                hidePrivate: "{{ magicmirror_calendar_hideprivate }}",
                calendars: {{ magicmirror_calendars | to_nice_json }}
            }
        },
{% if magicmirror_mycommute_enabled %}
        {
            module: 'MMM-MyCommute',
            position: 'bottom_left',
            header: "{{ magicmirror_mycommute_header }}",
            classes: 'default everyone',
            config: {
                apikey: "{{ magicmirror_mycommute_api_key }}",
                origin: "{{ magicmirror_mycommute_origin }}",
                startTime: "{{ magicmirror_mycommute_starttime }}",
                endTime: "{{ magicmirror_mycommute_endtime }}",
                hideDays: {{ magicmirror_mycommute_hidedays | default('[]', true) }},
                travelTimeFormat: "{{ magicmirror_mycommute_traveltimeformat }}",
                pollFrequency: "{{ magicmirror_mycommute_pollfrequency }}",
                destinations: {{ magicmirror_mycommute_destinations | to_nice_json }}
            }
        },
{% endif %}
        {
            module: "compliments",
            disabled: true,
            position: "lower_third",
            config: {
                remoteFile: "{{ magicmirror_compliments_file }}"
            }
        },
        {
            module: "currentweather",
            position: "top_right",
            config: {
                location: "{{ magicmirror_weather_location }}",
                locationID: "{{ magicmirror_weather_locationid }}",  //ID from http://www.openweathermap.org/help/city_list.txt
                appid: "{{ magicmirror_weather_api_key }}",
                degreeLabel: true,
                showHumidity: false
            }
        },
        {
            module: "weatherforecast",
            position: "top_right",
            header: "Weather Forecast",
            config: {
                location: "{{ magicmirror_weather_location }}",
                locationID: "{{ magicmirror_weather_locationid }}",  //ID from http://www.openweathermap.org/help/city_list.txt
                appid: "{{ magicmirror_weather_api_key }}"
            }
        },
{% if magicmirror_systemstats_enabled %}
        {
            module: 'MMM-SystemStats',
            position: 'bottom_right',
            classes: 'small dimmed',
            header: "{{ magicmirror_systemstats_header }}",
            config: {
                updateInterval: {{ magicmirror_systemstats_updateinterval }},
                animationSpeed: 0,
                align: 'right', // align labels
                thresholdCPUTemp: 167
            },
        },
{% endif %}
{% if magicmirror_alexa_enabled %}
        {
            module: "MMM-awesome-alexa",
            position: "bottom_bar",
            config: {
                wakeWord: "{{ magicmirror_alexa_wakeword }}",
                clientId: "{{ magicmirror_alexa_clientid }}",
                clientSecret: "{{ magicmirror_alexa_clientsecret }}",
                deviceId: "{{ magicmirror_alexa_deviceid }}",
                refreshToken: "{{ magicmirror_alexa_refreshtoken }}",
                lite: false,
                isSpeechVisualizationEnabled: true
            }
        },
{% endif %}
        {
            module: "newsfeed",
            position: "bottom_bar",
            config: {
                feeds: [
                    {% for item in magicmirror_newsfeeds %}
                    {
                        title: "{{ item.title }}",
                        url: "{{ item.url }}"
                    },
                    {% endfor %}
                ],
                showSourceTitle: true,
                showPublishDate: true
            }
        },
        {% for modules in magicmirror_extra_modules -%}
        {%  set _modules = magicmirror_extra_modules[modules] -%}
        {
            module: "{{ _modules['name'] }}",
            {%- if _modules['header'] is defined %}
            header: "{{ _modules['header'] }}",
            {%- endif %}

            {% if _modules['position'] is defined -%}
            position: "{{ _modules['position'] }}",
            {%- endif %}

            {% if _modules['config'] is defined -%}
            config: {
                {{ _modules['config']|indent(16, false) }}
            },
            {%- endif +%}
        },
      {% endfor -%}
    ]

};

/*************** DO NOT EDIT THE LINE BELOW ***************/
if (typeof module !== "undefined") {module.exports = config;}
